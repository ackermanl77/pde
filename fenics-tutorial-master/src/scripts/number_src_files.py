"""Copy src files with logical names to numbered src files.
The files are published in the directory ../pub/python.
"""

# Note the following issues:
#
# 1. Running this script requires tmp_preprocess__ftut1.do.txt, which
#    in turn requires building the book, which in turn requires
#    mako_code.txt, which should be generated by this script... :-)
#    So some bootstrapping is needed. Add lines 'foo': 'bar') manually
#    to make_code.txt, then build the book, then run this script and
#    udpate mako_code.txt.
#
# 2. The source files are only copied to pub when running this script
#    and it is not integrated with the build system.

import commands, re

# Find all references to Python programs
cmd = r"""grep -o -h -E 'prog\[".*?"\]' tmp_preprocess__ftut1.do.txt"""
status, output = commands.getstatusoutput(cmd)

# Extract filenames from references
filenames = []
for line in output.splitlines():
    names = re.findall(r'prog\["(.*?)"\]', line)
    print names
    [filenames.append(f) for f in names if f not in filenames]

print filenames

# Generate mapping from logical to numbered filenames
counter = 1
prog = []
for filename in filenames:
    new_filename = 'ft%02d_%s' % (counter, filename)
    print filename, '-->', new_filename
    counter += 1
    prog.append((filename, new_filename))

# Copy source files
for filename, new_filename in prog:
    cmd = 'cp vol1/python/%s.py ../pub/python/vol1/%s.py' % (filename, new_filename)
    status, output = commands.getstatusoutput(cmd)

# Write prog to mako_code.txt
print
print 'Stick this into mako_code.txt:'
print
rows = []
for (filename, new_filename) in prog:
    rows.append("'%s': '%s'" % (filename, new_filename))
print 'prog = {'
print ',\n'.join(rows)
print '}'
